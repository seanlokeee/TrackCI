version: 2.1
commands:
  install_dev_deps:
    steps:
      - run:
          name: Install Development Dependencies
          command: |
            npm install

# collection of jobs which get executed as part of the workflow
jobs:
  build-and-test:
    docker:
      # use latest version of node in long term support to prevent build from breaking
      - image: circleci/node:lts
    working_directory: ~/project/src #source code inside src folder
    steps:
      #access root folder of source repository
      - checkout:
          path: ~/project # set checkout path to project
      - install_dev_deps
      - run:
          name: Run Unit Tests
          command: |
            mkdir -p unit-test-output
            npm run test-unit
      - store_test_results:
          path: unit-test-output
      - store_artifacts: #store test result as an artifact
          path: unit-test-output/unittestresult.xml
  
  integration-test:
    docker:
      #primary container image where all commands run
      - image: circleci/node:lts
      #service container image
      - image: circleci/postgres:9.6.9-alpine
        environment:
          POSTGRES_DB: servian
          POSTGRES_USER: postgres 
          POSTGRES_PASSWORD: password
    working_directory: ~/project/src
    steps:
      - checkout:
          path: ~/project
      - install_dev_deps
      - run:
          name: Run Integration Tests
          command: |
            mkdir -p integration-test-output
            npm run test-integration
      - store_test_results: 
          path: integration-test-output 
      - store_artifacts: #store test result as an artifact
          path: integration-test-output/integrationtestresult.xml

  #take output of the build, package it up and store it somewhere for future use
  package: 
    docker:
      - image: circleci/node:lts
    working_directory: ~/project/src
    environment:
      NODE_ENV: production
    steps:
      - checkout:
          path: ~/project
      - install_dev_deps
      #dist = distribution folder
      #artifact generated by compiling the application/website
      - run: 
          name: Create Artifact
          command: |
            mkdir -p dist
            zip -r dist/src.zip src/
      - store_artifacts:
          path: dist

#describes which jobs get executed, in which order, and in which scenarios
workflows:
  version: 2
  build-test-package:
    jobs:
      - build-and-test
      - integration-test:
          requires:
            - build-and-test
      #packaging must only run on the master branch
      - package:
          requires:
            - integration-test
          filters:
            branches:
              only: master